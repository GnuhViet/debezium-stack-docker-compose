version: '2'
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        ports:
          - "22181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        healthcheck:
          test: ["CMD", "nc", "-z", "localhost", "2181"]
          interval: 10s
          timeout: 5s
          retries: 10
        networks:
          - ui-network
          
    kafka:
        image: confluentinc/cp-kafka:7.3.2
        ports:
          - "29094:9092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        depends_on:
          zookeeper:
            condition: service_healthy
        healthcheck:
          test: ["CMD", "nc", "-z", "localhost", "9092"]
          interval: 5s
          timeout: 10s
          retries: 5
        networks:
          - ui-network
          
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
          - 8099:8080
        depends_on:
          - kafka
        environment:
          DYNAMIC_CONFIG_ENABLED: 'true'
          KAFKA_CLUSTERS_0_NAME: wizard_test
          KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092    
        networks:
          - ui-network
          
    mariadb:
        image: mariadb:latest
        environment:
          MYSQL_ROOT_PASSWORD: admin123
          MYSQL_DATABASE: df_sch_health
        volumes:
          - ./my.cnf:/etc/mysql/my.cnf
        ports:
          - "23306:3306"
        # command: ['mysqld', '--default-authentication-plugin=mysql_native_password']
        healthcheck:
          test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
          start_period: 10s
          interval: 10s
          timeout: 5s
          retries: 3
        networks:
          - ui-network
          
    connect:
        image: debezium/connect:latest
        ports:
          - 28084:8083
        environment:
          BOOTSTRAP_SERVERS: kafka:29092
          GROUP_ID: 1
          CONFIG_STORAGE_TOPIC: my-connect-configs
          OFFSET_STORAGE_TOPIC: my-connect-offsets
          STATUS_STORAGE_TOPIC: my-connect-status
          CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
          CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
          SCHEMA_HISTORY_INTERNAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
          SCHEMA_HISTORY_INTERNAL_KAFKA_TOPIC: connect-sync-history-topic
        depends_on:
          kafka:
            condition: service_healthy
          mariadb:
            condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8083"]
            interval: 30s
            retries: 3
            start_period: 10s
            timeout: 10s
        volumes:
          - ./debezium:/kafka/connect/debezium
        networks:
          - ui-network
          
    debezium-ui:
        image: debezium/debezium-ui:latest
        container_name: debezium-ui
        ports:
          - 8097:8080
        environment:
          - KAFKA_CONNECT_URIS=http://connect:8083
        depends_on:
          connect:
            condition: service_healthy
        networks:
          - ui-network
          
    sync-service:
        build: .
        container_name: sync-service
        ports:
          - "29010:9010"
        environment:
          - ELASTICSEARCH_PASSWORD=
          - ELASTICSEARCH_URI=
          - ELASTICSEARCH_USER=
          - KAFKA_AUTH=0
          - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
          - KAFKA_PASSWORD=0
          - KAFKA_USERNAME=0
          - MARIA_DB_URL=mariadb:3306
          - MARIA_DB_USER=root
          - MARIA_DB_PASS=admin123
        depends_on:
          kafka:
            condition: service_healthy
          mariadb:
            condition: service_healthy
          connect:
            condition: service_healthy
        networks:
          - ui-network
          
networks:
  ui-network:
    external: false